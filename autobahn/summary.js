function collectSummary(data) {
  const dict = data[Object.keys(data)[0]];
  let keys = Object.keys(dict);
  let summary = {};

  for(const n of keys) {
    const obj = dict[n];
    const key = obj.behavior + obj.behaviorClose;
    if (key in summary) {
      summary[key].count += 1;
    } else {
      summary[key] = {
        behavior: obj.behavior,
        behaviorClose: obj.behaviorClose,
        count: 1
      }
    }
  }

  let res = {
    total: 0,
    data: []
  };

  keys = Object.keys(summary);
  for(const n of keys) {
    let obj = summary[n];
    res.total += obj.count;
    res.data.push(obj);
  }
  return res;
}

function statusEmoji(status, close) {
  if(status == 'OK' && close == 'OK')
    return ":heavy_check_mark:";

  if(status == 'OK' || close == 'OK')
    return ":repeat:";

  if(status == 'INFORMATIONAL' || close == 'INFORMATIONAL')
    return ":speech_balloon:";

  return ":x:";
}

function generateTable(data) {
  let res = [];
  res.push("| Behavior | Behavior Close | Count | Status |");
  res.push("| -------- | -------------- | ----- | ------ |");
  for(const n of data.data) {
    const num = n.count + '/' + data.total;
    const status = statusEmoji(n.behavior, n.behaviorClose);
    res.push(`| ${n.behavior} | ${n.behaviorClose} | ${num} | ${status} |`);
  }
  return res;
}

const sha = process.argv[2]
const short_sha = sha.substring(0, 8);

const md = [
  "# Autobahn summary report",
  `Generated by commit [${short_sha}](https://github.com/status-im/nim-ws/commit/${sha}).`,
  ""
];

const input = [
  { li: "* [ws server summary report](server/index.html)", file: './reports/server/index.json'},
  { li: "* [wss server summary report](server_tls/index.html)", file: './reports/server_tls/index.json'}
]

for(const n of input) {
  const ws = collectSummary(require(n.file));
  const table = generateTable(ws);
  md.push(n.li);
  md.push("");
  for(const n of table) {
    md.push(n);
  }
  md.push("");
}

for(const n of md) {
  console.log(n);
}
